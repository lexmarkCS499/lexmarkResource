name: Build, Push Docker Image, and Deploy

on:
  push:
    branches:
      - dev
      - staging
      - prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Step 3: Log in to DockerHub
      - name: Log in to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 4: Build and push the Docker image to DockerHub
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: src/Dockerfile  # Specify the path to your Dockerfile
          push: true
          tags: lexmarkkubernetes/my-app:${{ github.ref_name }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download and Install ArgoCD CLI in Working Directory
        run: |
          curl -sSL -o ./argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x ./argocd

      # Step 3: ArgoCD Login using Local Binary
#      - name: ArgoCD Login and Sync
#        env:
#          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
#        run: |
#          ARGOCD_SERVER="e382-2603-6010-3000-2a06-00-2.ngrok-free.app"
#          export ARGOCD_OPTS="--server $ARGOCD_SERVER --auth-token $ARGOCD_AUTH_TOKEN --grpc-web"
#          ./argocd account get-user-info
      - name: ArgoCD Login
        run: | 
          ./argocd login e382-2603-6010-3000-2a06-00-2.ngrok-free.app \
          --username admin \ 
          --password znNBZgX8m3lTthkP \ 
          --insecure --grpc-web

      # Step 4: Sync ArgoCD Application using Local Binary
      - name: Sync ArgoCD Application
        run: |
          if [ "${{ github.ref_name }}" == "dev" ]; then
            ./argocd app sync dev-myapp-argo-application --prune
          elif [ "${{ github.ref_name }}" == "staging" ]; then
            ./argocd app sync staging-myapp-argo-application --prune
          elif [ "${{ github.ref_name }}" == "prod" ]; then
            ./argocd app sync prod-myapp-argo-application --prune
          fi